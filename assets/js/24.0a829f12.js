(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{456:function(t,a,e){"use strict";e.r(a);var s=e(2),n=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"introduction"}},[t._v("Introduction")]),t._v(" "),a("p",[t._v("A key-value and document database(NoSQL) which can guarantee "),a("strong",[t._v("consistent reads and writes")]),t._v(" at any scale.")]),t._v(" "),a("h3",{attrs:{id:"what-is-nosql"}},[t._v("What is NoSQL")]),t._v(" "),a("p",[t._v("NoSQL is database which is nither relational and does not use SQL to query the data for results.")]),t._v(" "),a("h3",{attrs:{id:"what-is-a-key-value-store"}},[t._v("What is a Key/Value Store")]),t._v(" "),a("p",[t._v("A form of data storage which has a key which references a value and nothing more")]),t._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Title"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 'S01E019 DS9 Duet'"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h3",{attrs:{id:"what-is-a-document-store"}},[t._v("What is a Document Store")]),t._v(" "),a("p",[t._v("A form of data storage which a nested data structure.")]),t._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    Series"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 'DS9'"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    Episodes"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            Season"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            Epsisode"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            Title"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 'Duet'\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("p",[t._v("DynamoDB is a NoSQL key/value and document database for internet-scale applications.")]),t._v(" "),a("h3",{attrs:{id:"features"}},[t._v("Features")]),t._v(" "),a("ul",[a("li",[t._v("Fully managed")]),t._v(" "),a("li",[t._v("Multiregion")]),t._v(" "),a("li",[t._v("Multimaster")]),t._v(" "),a("li",[t._v("Durable database")]),t._v(" "),a("li",[t._v("Built-in security")]),t._v(" "),a("li",[t._v("Backup and restore")]),t._v(" "),a("li",[t._v("In-memory caching")])]),t._v(" "),a("h3",{attrs:{id:"provides"}},[t._v("Provides")]),t._v(" "),a("ul",[a("li",[t._v("Eventual Consistent Reads(default)")]),t._v(" "),a("li",[t._v("Strongly Consistent Reads")])]),t._v(" "),a("p",[t._v("All data is stored on "),a("strong",[t._v("SSD storage")]),t._v(" and is spread across "),a("strong",[t._v("3 different regions")]),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"table-structure"}},[t._v("Table Structure")]),t._v(" "),a("h2",{attrs:{id:"consistent-reads"}},[t._v("Consistent Reads")]),t._v(" "),a("p",[t._v("When data needs to updated it has to write updates to all copies. "),a("strong",[t._v("It is possible for data to be inconsistent")]),t._v(" if you are reading from a copy which has yet to be updated. You have the ability to choose the read consistency in DynamoDB to meet your needs.")]),t._v(" "),a("h3",{attrs:{id:"eventual-consistent-reads-default"}},[t._v("Eventual Consistent Reads(DEFAULT)")]),t._v(" "),a("p",[t._v("When copies are being updated it is possible for you to read and returned an inconsistent copy.")]),t._v(" "),a("p",[t._v("Reads are fast but there is no guarantee of consistent.")]),t._v(" "),a("p",[t._v("All copies of data eventuall become generally consistent within a second.")]),t._v(" "),a("h3",{attrs:{id:"strongly-consistent-reads"}},[t._v("Strongly Consistent Reads")]),t._v(" "),a("p",[t._v("When copies are being updated and you attempt to read, it will not return a result untill all copies are consistent.")]),t._v(" "),a("p",[t._v("You have a guarantee of consistency but the trade off is higher latency(slower reads).")]),t._v(" "),a("p",[t._v("All copies of data will be consistent within a second.")]),t._v(" "),a("h2",{attrs:{id:"cheat-sheet"}},[t._v("Cheat Sheet")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("DynamoDB")]),t._v(" is a fully managed NoSQL key/value and document database.")]),t._v(" "),a("li",[t._v("Applications that contain large amounts of data but require predictable read and write performance while scaling is a good fit for DynamoDB.")]),t._v(" "),a("li",[t._v("DynamoDB scales with whatever "),a("strong",[t._v("read and write capacity you specific")]),t._v(" per second.")]),t._v(" "),a("li",[t._v("DynamoDB can be set to have "),a("strong",[t._v("Eventually Consistent Read(default)")]),t._v(" and "),a("strong",[t._v("Strongly Consistent Reads")])]),t._v(" "),a("li",[a("strong",[t._v("Eventually consistent reads")]),t._v(" data is returned immediately but data can be inconsistent. Copies of data will be generally consistent in 1 second.")]),t._v(" "),a("li",[a("strong",[t._v("Strongly Consistent Reads")]),t._v(" will wait until data in consistent. Data will never be inconsistent but latency will be higher. Copies of data will be consistent within a guarantee of 1 second.")]),t._v(" "),a("li",[t._v("DynamoDB stores 3 copies of data on SSD drives across 3 regions.")])])])}),[],!1,null,null,null);a.default=n.exports}}]);