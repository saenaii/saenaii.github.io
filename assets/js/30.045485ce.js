(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{466:function(e,s,t){"use strict";t.r(s);var i=t(2),o=Object(i.a)({},(function(){var e=this,s=e._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h2",{attrs:{id:"introduction"}},[e._v("Introduction")]),e._v(" "),s("p",[e._v("Fully managed "),s("strong",[e._v("queuing service")]),e._v(" that enables you to decouple and scale microservices, distributed systems, and serverless applications")]),e._v(" "),s("h3",{attrs:{id:"what-is-a-messaging-system"}},[e._v("What is a Messaging System?")]),e._v(" "),s("p",[e._v("Used to provide asynchronous communication and decouple processes via messages/events. From a sender and receiver(producer and consumer)")]),e._v(" "),s("h3",{attrs:{id:"queuing"}},[e._v("Queuing")]),e._v(" "),s("p",[e._v("Generally will delete message once they are consumed. Simple communciation. "),s("strong",[e._v("Not Real-time.")]),e._v(" Have to pull. Not reactive.")]),e._v(" "),s("h3",{attrs:{id:"streaming"}},[e._v("Streaming")]),e._v(" "),s("p",[e._v("Multiple consumers can "),s("strong",[e._v("react")]),e._v(" to events(messages). Event live in the stream for long periods of time, so complex operations can be applied. "),s("strong",[e._v("Real-time")])]),e._v(" "),s("h3",{attrs:{id:"sqs-is-for-application-integration"}},[e._v("SQS is for "),s("strong",[e._v("Application Integration")])]),e._v(" "),s("p",[e._v("AWS SQS is a solution for the distributed "),s("strong",[e._v("queuing")]),e._v(" of messages generated by your application. It connects isolate applications together by passing along message to one another.")]),e._v(" "),s("p",[e._v("A "),s("strong",[e._v("queue")]),e._v(" is a temporary repository for messages that are awaiting processing.")]),e._v(" "),s("p",[e._v("Using the "),s("strong",[e._v("AWS SDK")]),e._v(" you write code which publishes messages onto the queue or you pull the queue for messages.")]),e._v(" "),s("p",[e._v("SQS is pull based, not push based.")]),e._v(" "),s("h2",{attrs:{id:"use-case"}},[e._v("Use Case")]),e._v(" "),s("ol",[s("li",[e._v("App publishes messages to the queue.")]),e._v(" "),s("li",[e._v("Other app pulls the queue and find the message and does something.")]),e._v(" "),s("li",[e._v("Other app reports that they completed their task and marks the message for completion.")]),e._v(" "),s("li",[e._v("Original app pulls the queue and sees the message is no longer in the queue.")])]),e._v(" "),s("p",[e._v("Both apps are using the "),s("strong",[e._v("AWS SDK")]),e._v(" to push messages and pull the queue.")]),e._v(" "),s("h2",{attrs:{id:"sqs-limits-retention"}},[e._v("SQS Limits & Retention")]),e._v(" "),s("h3",{attrs:{id:"message-size"}},[e._v("Message Size")]),e._v(" "),s("p",[e._v("The size of a message can be between "),s("strong",[e._v("1 byte and 256KB")])]),e._v(" "),s("h3",{attrs:{id:"amazon-sqs-extended-client-library-for-java-only-for-java"}},[e._v("Amazon SQS Extended Client Library for JAVA(only for JAVA)")]),e._v(" "),s("p",[e._v("Lets you send messages "),s("strong",[e._v("256KB to 2GB")]),e._v(" in size. The message will be stored in S3 and library will reference the S3 object.")]),e._v(" "),s("h3",{attrs:{id:"message-retention"}},[e._v("Message Retention")]),e._v(" "),s("p",[e._v("How long SQS will hold onto a message in the queue before dropping it from the queue(deleting it)")]),e._v(" "),s("ul",[s("li",[e._v("Message retention by default is 4 days.")]),e._v(" "),s("li",[e._v("Message retention can be adjusted from a minimum of "),s("strong",[e._v("60 seconds")]),e._v(" to a "),s("strong",[e._v("max of 14 Days")])])]),e._v(" "),s("h2",{attrs:{id:"sqs-queue-types"}},[e._v("SQS Queue Types")]),e._v(" "),s("h3",{attrs:{id:"standard-queues"}},[e._v("Standard Queues")]),e._v(" "),s("ul",[s("li",[e._v("AWS SQS "),s("strong",[e._v("Standard Queues")]),e._v(" allow you a "),s("strong",[e._v("nearly-unlimited")]),e._v(" number of transactions per second.")]),e._v(" "),s("li",[e._v("Guarantees that a message will be delivered "),s("strong",[e._v("AT LEASTi once")]),e._v(".")]),e._v(" "),s("li",[s("strong",[e._v("More than one copy")]),e._v(" of a message could be potentially delivered "),s("strong",[e._v("out of order")]),e._v(".")]),e._v(" "),s("li",[e._v("Provide "),s("strong",[e._v("best-effort ordering")]),e._v(" that helps ensure a message is generally delivered in the same order that it was sent.")])]),e._v(" "),s("h3",{attrs:{id:"fifo-queues"}},[e._v("FIFO Queues")]),e._v(" "),s("p",[e._v("AWS SQS "),s("strong",[e._v("First-In-First-Out")]),e._v(" queues supprot multiple ordered message groups whitin a single queue.")]),e._v(" "),s("p",[e._v("Limited to 300 transactions per second.")]),e._v(" "),s("p",[e._v("AWS FIFO queues have all the same capabilities of a Standard Queue.")]),e._v(" "),s("h3",{attrs:{id:"sqs-visibility-timeout"}},[e._v("SQS Visibility Timeout")]),e._v(" "),s("p",[e._v("How do we prevent another app from reading a message while another one is busy with that message? (Avoid someone doing the same task)")]),e._v(" "),s("p",[e._v("A "),s("strong",[e._v("visibility time-out")]),e._v(" is the period of time that messages are "),s("strong",[e._v("invisible in the SQS queue")]),e._v(", after a reader picks up that message.")]),e._v(" "),s("p",[e._v("The default visible time-out is 30 seconds, you can set it from "),s("strong",[e._v("0 seconds to 12 hours")])]),e._v(" "),s("p",[e._v("Messages will be "),s("strong",[e._v("deleted")]),e._v(" from the queue "),s("strong",[e._v("after a job has precessed")]),e._v(".(before the visibility timeout expires)")]),e._v(" "),s("p",[e._v("If a job is "),s("strong",[e._v("NOT")]),e._v(" processed before the visibility time-out period, the message will "),s("strong",[e._v("become visible agina")]),e._v(" and another reader will process it.")]),e._v(" "),s("p",[e._v("This can result in the same message being delivered "),s("strong",[e._v("twice")])]),e._v(" "),s("h2",{attrs:{id:"shorts-vs-long-polling"}},[e._v("Shorts vs Long Polling")]),e._v(" "),s("p",[s("strong",[e._v("Polling")]),e._v(" is the method in which we retrieve messages from the queues.")]),e._v(" "),s("h3",{attrs:{id:"short-polling"}},[e._v("Short Polling")]),e._v(" "),s("p",[e._v("Short Polling(default) returns messages immediately, even if the message queue being polled is empty.")]),e._v(" "),s("p",[e._v("When you need a message "),s("strong",[e._v("right away")]),e._v(", short polling is what you want to use.")]),e._v(" "),s("h3",{attrs:{id:"long-polling"}},[e._v("Long Polling")]),e._v(" "),s("p",[e._v("Long polling waits until the message "),s("strong",[e._v("arrives in the queue")]),e._v(", or the "),s("strong",[e._v("long poll timeout expires")])]),e._v(" "),s("p",[e._v("Long polling makes it "),s("strong",[e._v("inexpensive to retrieve messages")]),e._v(" from your queue as soon as the message are available.")]),e._v(" "),s("p",[e._v("Using long polling will reduce the cost because you can "),s("strong",[e._v("reduce the number of empty receives")]),e._v(".")]),e._v(" "),s("p",[s("strong",[e._v("Most use-cases")]),e._v(" you want to use Long Polling.")]),e._v(" "),s("h2",{attrs:{id:"cheat-sheet"}},[e._v("Cheat Sheet")]),e._v(" "),s("ul",[s("li",[e._v("SQS is a queuing service using messages with a queue. Think Sidekiq or RabbitMQ.")]),e._v(" "),s("li",[e._v("SQS is used for Application Integration, it lets decoupled services and apps to talk to each other.")]),e._v(" "),s("li",[e._v("To read SQS need to "),s("strong",[e._v("pull")]),e._v(" the queue using AWS SDK.\n"),s("ul",[s("li",[e._v("SQS is "),s("strong",[e._v("not pushed-based")])])])]),e._v(" "),s("li",[e._v("SQS supprots both Standard and First-In-First-Out(FIFO) queues")]),e._v(" "),s("li",[e._v("Standard allows nearly unlimited messages per second, does not guarantee order of delivery, always delivers at least once, you must protect again dulicate message being processed.")]),e._v(" "),s("li",[e._v("FIFO maintain the order of messages with a 300 limit.")]),e._v(" "),s("li",[e._v("There are 2 kinds of polling\n"),s("ul",[s("li",[e._v("Short(default)")]),e._v(" "),s("li",[e._v("Long Polling")])])]),e._v(" "),s("li",[e._v("Short polling returns messages immediately, even if the message queue being polled is empty.")]),e._v(" "),s("li",[e._v("Long polling waits until message arrives in the queue, or the long poll timeout expires.")]),e._v(" "),s("li",[s("strong",[e._v("Visbility time-out")]),e._v(" is the period of time that message are invisible in the SQS queue.")]),e._v(" "),s("li",[e._v("Messages will be deleted from queue after a job has processed.(before visiblity timeout expires)")]),e._v(" "),s("li",[e._v("If Visibility timeout expires then a job will become visible to the queue.")]),e._v(" "),s("li",[e._v("The default Visibility timeout is 30 seconds. Timeout can be "),s("strong",[e._v("0 seconds")]),e._v(" to maximum of 12 hours.")]),e._v(" "),s("li",[e._v("SQS can retain messages from 60 seconds to 14 days and by default is 4 days.")]),e._v(" "),s("li",[e._v("Message size between 1 byte to 256 kb. Extended Client Library for Java can increase to 2GB.")])])])}),[],!1,null,null,null);s.default=o.exports}}]);